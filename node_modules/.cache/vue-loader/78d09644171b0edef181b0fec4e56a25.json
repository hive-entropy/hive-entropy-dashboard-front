{"remainingRequest":"/home/gabriel/vue_hive_entropy/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/gabriel/vue_hive_entropy/src/components/Nodes.vue?vue&type=style&index=0&id=0b953e31&lang=css","dependencies":[{"path":"/home/gabriel/vue_hive_entropy/src/components/Nodes.vue","mtime":1624010135884},{"path":"/home/gabriel/vue_hive_entropy/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabriel/vue_hive_entropy/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/gabriel/vue_hive_entropy/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/gabriel/vue_hive_entropy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabriel/vue_hive_entropy/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaDMgewogICAgbWFyZ2luLWJvdHRvbTogNSU7CiAgfQo="},{"version":3,"sources":["/home/gabriel/vue_hive_entropy/src/components/Nodes.vue"],"names":[],"mappings":";EAuKE,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACnB","file":"/home/gabriel/vue_hive_entropy/src/components/Nodes.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container\">\n  <div class=\"row\">\n    <h3>Nodes : </h3>\n\t<div class=\"col-11\">\n\t<table class=\"table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th scope=\"col\">ID</th>\n\t\t\t<th scope=\"col\">Address IP</th>\n\t\t\t<th scope=\"col\">Architecture</th>\n\t\t\t<th scope=\"col\">Proxy</th>\n\t\t\t<th scope=\"col\">State</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr class=\"node-info-line\" v-for=\"node in nodes\" v-bind:key=\"node.id\" v-on:click=\"get_infos($event)\" v-bind:id=\"node.id\">\n\t\t<!--onclick=\"document.location.href='#nodes_info';\"-->\n\t\t\t<th scope=\"row\">{{ node.id }}</th>\n\t\t\t<td>{{ node.address }}</td>\n\t\t\t<td>{{ node.arch }}</td>\n\t\t\t<td>{{ node.proxy }}</td>\n\t\t\t<td>{{ node.state }}</td>\n\t\t<!--v-on:click=\"deploy_node($event)\"-->\n\t\t</tr>\n\n\t</tbody>\n\t</table>\n\t</div>\n\t<div class=\"col col-lg-1\">\n            <div style=\"margin-top: 45px;\">\n\t\t<button style=\"margin:5px;\" v-for=\"node in nodes\" v-bind:key=\"node.id\" v-on:click=\"changed\" v-bind:id=\"'btn_'+ node.id\">Start</button>\n            </div>\n\t</div>\n  </div>\n\n  \n <div class=\"row\">\n\t<p>{{ deploy_error }}</p>\n\t<h3 style=\"margin-top:50px\">Information about node id : {{ selected_node.ID }}</h3>\n\t<table class=\"table\" style=\"border-bottom-width: 1px;\">\n\t\t<tr v-for=\"(key, item) in selected_node\" v-bind:key=\"item\" class=\"border_bottom\">\n\t\t<th>{{ item }}</th>\n\t\t<td v-if=\"item==='processor'\">\n\t\t\t<ul>\n\t\t\t    <li v-for=\"(val,cat) in key\" v-bind:key=\"cat\">\n\t\t\t\t<template v-if=\"cat==='frequency'\">{{ cat }} : \n\t\t\t\t    <ul>\n\t\t\t\t\t<li v-for=\"(val2,cat2) in val\" v-bind:key=\"cat2\">{{ cat2 }} : {{ val2 }}\n\t\t\t\t\t</li>\n\t\t\t\t    </ul>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t    {{ cat }} : {{ val }}\n\t\t\t\t</template>\n\t\t\t    </li>\n\t\t\t</ul>\n\t\t    </td>\n\t\t    <td v-else-if=\"item==='ram'\">\n\t\t\t<ul>\n\t\t\t    <li v-for=\"(val,cat) in key\" v-bind:key=\"cat\">\n\t\t\t\t<template v-if=\"cat==='capacity'\">{{ cat }} : \n\t\t\t\t    <ul>\n\t\t\t\t\t<li v-for=\"(val2,cat2) in val\" v-bind:key=\"cat2\">{{ cat2 }} : {{ val2 }}\n\t\t\t\t\t</li>\n\t\t\t\t    </ul>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t    {{ cat }} : {{ val }}\n\t\t\t\t</template>\n\t\t\t    </li>\n\t\t\t</ul>\n\t\t    </td>\n\t\t    <td v-else>\n\t\t\t{{ key }}\n\t\t    </td>\n\t\t</tr>\n\t</table>\n </div>\n\n  <div class='row'>\n  <h3 style=\"margin-top:50px\">Information about logs :</h3>\n  <div style=\"margin-left:50px; text-align:left\">\n  \t<p>{{ logs }}</p>\n  </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    name: 'Nodes',\n    data() {\n      return {\n        nodes: null,\n        infos: null,\n        selected_node : '',\n        deploy_error : null\n      };\n    },\n    created: function() {\n      axios\n        .get('http://sevenmoor.com:4444/nodes', this.data,{\n        headers: {'Access-Control-Allow-Origin': '*'}\n        })\n        .then(res => {\n          this.nodes = res.data;\n        })\n    },\n    methods: {\n     get_infos : function(event){\n\tvar targetId = event.currentTarget.id;\n\taxios\n\t.get('http://sevenmoor.com:4444/nodes/'+targetId)\n\t.then(response => (this.selected_node = response.data))\n\t.catch(error => console.log(error))\n     },\n     changed : function(event) {\n\tvar targetId = event.currentTarget.id;\n\tconst nodeId = targetId.split('_')[1];\n\talert(nodeId);\n\tif (event.target.textContent == \"Stop\"){\n\t\tthis.node_start_stop(nodeId,\"start\")\n\t\tevent.target.textContent = \"Start\"\n\t\t\n\t}\n\telse{\n\t\tthis.node_start_stop(nodeId,\"stop\")\n\t\tevent.target.textContent = \"Stop\"\n\t\t\n\t}\n     },\n     get_logs : function(){\n      axios\n\t.get('http://sevenmoor.com:4444/nodes/'+targetId+'/logs')\n\t.then(response => (this.logs = JSON.stringify(response)))\n\t.catch(error => console.log(error))\n     },\n     deploy_node : function () {\n\tvar targetId = event.currentTarget.id;\n\tvar action = this.state_message\n\taxios\n\t.post('http://sevenmoor.com:4444/nodes/'+targetId+'/'+action.toLowerCase())\n\t.then(response => (this.deploy_error = response), this.state_message = change_message(this.state_message))\n\t.catch(error => console.log(error))*/\n     },\n     node_start_stop : function (nodeId,action) {\n\tconst response = await axios.post('http://sevenmoor.com:4444/nodes/' + nodeId + '/' + action.toLowerCase());\n\talert(response);\n     },\n     intervalFetchData: function () {\n     setInterval(() => {\n        this.get_infos();\n        }, 10000);\n     }\n    },\n    mounted () {\n        // Run the functions once when mounted \n        this.get_infos();\n        // Run the intervalFetchData function once to set the interval time for later refresh\n        this.intervalFetchData();\n    }\n}\n</script>\n\n<style>\n  h3 {\n    margin-bottom: 5%;\n  }\n</style>\n"]}]}